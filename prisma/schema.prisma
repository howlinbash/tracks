generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EraEnum {
  TWENTIES
  TEENIES
  NOUGHTIES
  NINETIES
  EIGHTIES
  SEVENTIES
  SIXTIES
  FIFTIES
  FORTIES
  THIRTIES
  NINETWENTIES
  N_A
}

enum LibraryEnum {
  ALL
  ONLINE
  OFFLINE
  WISHLIST
}

model Song {
  id       Int      @id @default(autoincrement())
  label    String
  path     String
  eraId    Int
  era      Era      @relation(fields: [eraId], references: [id])
  genreId  Int
  genre    Genre    @relation(fields: [genreId], references: [id])
  artistId Int
  artist   Artist   @relation(fields: [artistId], references: [id])
  active   Boolean?
  ktv      Boolean?
  tubes    Tube[]

  @@unique([label, artistId])
  @@map("songs")
}

model Era {
  id     Int      @id @default(autoincrement())
  label  EraEnum  @unique
  songs  Song[]
  active Boolean?

  @@map("eras")
}

model Genre {
  id     Int      @id @default(autoincrement())
  label  String   @unique
  songs  Song[]
  active Boolean?

  @@map("genres")
}

model Artist {
  id     Int      @id @default(autoincrement())
  label  String   @unique
  songs  Song[]
  active Boolean?

  @@map("artists")
}

model Filter {
  id       Int  @id @default(autoincrement())
  eraId    Int?
  genreId  Int?
  artistId Int?

  @@map("filters")
}

model Tube {
  id      Int    @id @default(autoincrement())
  url     String
  library String
  songId  Int
  song    Song   @relation(fields: [songId], references: [id])

  @@unique([url])
  @@map("tubes")
}

model Ui {
  id       Int  @id @default(autoincrement())
  library  LibraryEnum @default(ALL)
}
